var assert = require('assert');
var path = require('path');
var shell = require('shelljs');
const commons = require("../commons.js");

var nodejsTestsPath = './tests/input/nodejs',
    projectName = 'sample-project',
    testFileName = 'debloatingJS/__run_tests.js';



function runNodeTests (appName) {

    it('run jalangi', function () {
        var exitCode = commons.jalangiAnalysis('CheckModuleLoading', appName, null, true);
        assert.equal(exitCode, 0);
    });

    // compare actual and expected JSON files generated by the dynamic analysis phase
   /* it('compare outputs', function () {
        commons.compareOutputs(testName, 'unit');
    });

    it('run both phases', function (){
        var exitCode = commons.runBothPhases(testName, false);
        assert.equal(exitCode, 0);
    });

    it('verify instrumented app execution', function (done) {
        var originalFile = commons.getOriginalPathOrDir(testName, 'unit');
        var modifiedFile = commons.getModifiedPathOrDir(testName, 'unit');
        commons.interceptAppExecution(originalFile, modifiedFile, [], done);
    });*/
}


/*

describe('execute node.js tests', function () {
   describe('sample application', function () {
       var testFile = path.join(nodejsTestsPath, projectName, testFileName);
       console.log("before execution");
       console.log("TestFile "+testFile);
       shell.exec('node ' + testFile);
   })
});
*/


describe('all tests for nodejs', function () {
    this.timeout(20000);
    describe('sample application', function () {
        var testFile = path.join(nodejsTestsPath, projectName, testFileName);
        console.log("before execution");
        console.log("TestFile "+testFile);
        runNodeTests(testFile);
        //shell.exec('node ' + testFile);
    })
});