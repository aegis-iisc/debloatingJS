'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var assert = require('assert');
var logger = require('..');

describe('noop-logger', function () {
  it('should expose methods', function () {
    assert.equal('function', _typeof(logger.debug));
    assert.equal('function', _typeof(logger.info));
    assert.equal('function', _typeof(logger.warn));
    assert.equal('function', _typeof(logger.error));
    assert.equal('function', _typeof(logger.critical));
    assert.equal('function', _typeof(logger.alert));
    assert.equal('function', _typeof(logger.emergency));
    assert.equal('function', _typeof(logger.notice));
    assert.equal('function', _typeof(logger.verbose));
    assert.equal('function', _typeof(logger.fatal));
  });
});