/**
 * @author Toru Nagashima
 * @copyright 2015 Toru Nagashima. All rights reserved.
 * See LICENSE file in root directory for full license.
 */
"use strict";

//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------

var checkExistence = require("../util/check-existence");
var getAllowModules = require("../util/get-allow-modules");
var getDocsUrl = require("../util/get-docs-url");
var getImportExportTargets = require("../util/get-import-export-targets");
var getResolvePaths = require("../util/get-resolve-paths");
var getTryExtensions = require("../util/get-try-extensions");

//------------------------------------------------------------------------------
// Helpers
//------------------------------------------------------------------------------

/**
 * The definition of this rule.
 *
 * @param {RuleContext} context - The rule context to check.
 * @returns {object} The definition of this rule.
 */
function create(context) {
    var filePath = context.getFilename();
    if (filePath === "<input>") {
        return {};
    }

    return {
        "Program:exit": function ProgramExit(node) {
            checkExistence(context, getImportExportTargets(context, node));
        }
    };
}

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = {
    create: create,
    meta: {
        docs: {
            description: "disallow `import` declarations of missing files",
            category: "Possible Errors",
            recommended: false,
            url: getDocsUrl("no-missing-import.md")
        },
        fixable: false,
        schema: [{
            type: "object",
            properties: {
                allowModules: getAllowModules.schema,
                tryExtensions: getTryExtensions.schema,
                resolvePaths: getResolvePaths.schema
            },
            additionalProperties: false
        }]
    }
};