'use strict';

/* global describe, it */

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var assert = require('assert');
var realFoo = require('./samples/foo');

var stubs = {
  path: {
    extname: function extname() {},
    basename: function basename() {}
  }
};

describe('api', function () {
  describe('default export', function () {
    var proxyquire = require('..');

    it('proxyquire can load', function () {
      var proxiedFoo = proxyquire.load('./samples/foo', stubs);

      assert.equal(typeof proxiedFoo === 'undefined' ? 'undefined' : _typeof(proxiedFoo), 'object');
      assert.notStrictEqual(realFoo, proxiedFoo);
    });

    it('proxyquire can callThru and then load', function () {
      var proxiedFoo = proxyquire.callThru().load('./samples/foo', stubs);

      assert.equal(typeof proxiedFoo === 'undefined' ? 'undefined' : _typeof(proxiedFoo), 'object');
      assert.notStrictEqual(realFoo, proxiedFoo);
    });

    it('proxyquire can noCallThru and then load', function () {
      var proxiedFoo = proxyquire.noCallThru().load('./samples/foo', stubs);

      assert.equal(typeof proxiedFoo === 'undefined' ? 'undefined' : _typeof(proxiedFoo), 'object');
      assert.notStrictEqual(realFoo, proxiedFoo);
    });
  });
});