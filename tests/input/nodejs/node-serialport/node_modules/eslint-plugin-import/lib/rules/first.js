'use strict';

var _docsUrl = require('../docsUrl');

var _docsUrl2 = _interopRequireDefault(_docsUrl);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

module.exports = {
  meta: {
    docs: {
      url: (0, _docsUrl2.default)('first')
    }
  },

  create: function create(context) {
    function isPossibleDirective(node) {
      return node.type === 'ExpressionStatement' && node.expression.type === 'Literal' && typeof node.expression.value === 'string';
    }

    return {
      'Program': function Program(n) {
        var body = n.body,
            absoluteFirst = context.options[0] === 'absolute-first';
        var nonImportCount = 0,
            anyExpressions = false,
            anyRelative = false;
        body.forEach(function (node) {
          if (!anyExpressions && isPossibleDirective(node)) {
            return;
          }

          anyExpressions = true;

          if (node.type === 'ImportDeclaration') {
            if (absoluteFirst) {
              if (/^\./.test(node.source.value)) {
                anyRelative = true;
              } else if (anyRelative) {
                context.report({
                  node: node.source,
                  message: 'Absolute imports should come before relative imports.'
                });
              }
            }
            if (nonImportCount > 0) {
              context.report({
                node: node,
                message: 'Import in body of module; reorder to top.'
              });
            }
          } else {
            nonImportCount++;
          }
        });
      }
    };
  }
};